{"ast":null,"code":"import _slicedToArray from\"/home/kali/Desktop/Git/proptype/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Box,CloseButton,Container,FormControl,FormErrorMessage,FormHelperText,FormLabel,Heading,Input,useDisclosure,useToast}from\"@chakra-ui/react\";import{useState}from\"react\";import{SlideFade}from\"@chakra-ui/react\";import\"./App.css\";import Evenodd from\"./components/evenodd\";import Palindrome from\"./components/palindrome\";import Prime from\"./components/prime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var toast=useToast();var _useDisclosure=useDisclosure(),isOpen=_useDisclosure.isOpen,onToggle=_useDisclosure.onToggle;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),error=_useState2[0],seterror=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),errormessage=_useState4[0],seterrormessage=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),output=_useState6[0],setoutput=_useState6[1];function handlepalindrome(p){if(p===\"error\"){seterrormessage(\"Please enter a string to check if it is a palindrome string or not.\");seterror(true);}else{if(p){setoutput(\"\".concat(input,\" is a Palindrome String.\"));if(isOpen){}else{onToggle();}seterror(false);}else{setoutput(\"\".concat(input,\" is not a Palindrome String.\"));if(isOpen){}else{onToggle();}seterror(false);}}}function handleeven(even){if(even===\"error\"){if(input===\"\"){seterrormessage(\"Please enter a number to check if it is a Even or Odd number!\");seterror(true);}else{seterrormessage(\"Whoops! \".concat(input,\" is not a number!\"));seterror(true);}}else{if(even){setoutput(\"\".concat(input,\" is a Even Number.\"));if(isOpen){}else{onToggle();}seterror(false);}else{setoutput(\"\".concat(input,\" is a Odd Number.\"));if(isOpen){}else{onToggle();}seterror(false);}}}function handleprime(prime){if(prime===\"error\"){if(input===\"\"){seterrormessage(\"Please enter a number to check if it is a prime number or not!\");seterror(true);}else{seterrormessage(\"Whoops! \".concat(input,\" is not a number!\"));seterror(true);}}else{if(parseInt(input)===1){setoutput(\"1 is neither prime nor a composite number\");if(isOpen){}else{onToggle();}seterror(false);}else if(parseInt(input)<1){toast({title:\"Please enter a positive number.\",status:\"error\",isClosable:true,position:\"top\"});seterror(false);}else if(prime){setoutput(\"\".concat(input,\" is a Prime Number.\"));if(isOpen){}else{onToggle();}seterror(false);}else{setoutput(\"\".concat(input,\" is not a Prime Number.\"));if(isOpen){}else{onToggle();}seterror(false);}}}var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),input=_useState8[0],setInput=_useState8[1];var handleInputChange=function handleInputChange(e){setInput(e.target.value);seterror(false);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Box,{id:\"img\",h:\"100vh\",w:\"100vw\",children:/*#__PURE__*/_jsxs(Container,{pt:\"120px\",children:[/*#__PURE__*/_jsx(Heading,{color:\"teal.500\",mb:10,children:\"Even/Odd, Prime Number, Palindrome String Checker\"}),/*#__PURE__*/_jsxs(FormControl,{isInvalid:error,children:[/*#__PURE__*/_jsx(FormLabel,{color:\"teal.800\",children:\"Enter a number/string to check whether it is Even/Odd or Prime number or Palindrome string.\"}),/*#__PURE__*/_jsx(Input,{placeholder:\"Input\",type:\"text\",value:input,onChange:handleInputChange}),!error?/*#__PURE__*/_jsxs(FormHelperText,{children:[\"Note: String can contain alphabets, numbers and special characters. \",/*#__PURE__*/_jsx(\"br\",{}),\" Example: \\\"#@1wow1@#\\\" is valid string.\"]}):/*#__PURE__*/_jsx(FormErrorMessage,{children:errormessage}),/*#__PURE__*/_jsxs(Box,{mt:\"30px\",children:[/*#__PURE__*/_jsx(Evenodd,{iseven:handleeven,number:/[a-zA-Z]/.test(input)?parseInt(\"lol\"):parseInt(input)}),\" \",/*#__PURE__*/_jsx(Prime,{isprime:handleprime,number:/[a-zA-Z]/.test(input)?parseInt(\"lol\"):parseInt(input)}),\" \",/*#__PURE__*/_jsx(Palindrome,{ispalindrome:handlepalindrome,input:input})]}),/*#__PURE__*/_jsx(SlideFade,{in:isOpen,offsetY:\"20px\",children:/*#__PURE__*/_jsxs(Box,{p:\"40px\",color:\"white\",mt:\"4\",bg:\"teal.500\",rounded:\"md\",shadow:\"md\",id:\"output\",children:[/*#__PURE__*/_jsx(CloseButton,{id:\"close\",onClick:onToggle}),/*#__PURE__*/_jsx(\"strong\",{children:\"Output:\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),output]})})]})]})})});}export default App;","map":{"version":3,"names":["Box","CloseButton","Container","FormControl","FormErrorMessage","FormHelperText","FormLabel","Heading","Input","useDisclosure","useToast","useState","SlideFade","Evenodd","Palindrome","Prime","App","toast","isOpen","onToggle","error","seterror","errormessage","seterrormessage","output","setoutput","handlepalindrome","p","input","handleeven","even","handleprime","prime","parseInt","title","status","isClosable","position","setInput","handleInputChange","e","target","value","test"],"sources":["/home/kali/Desktop/Git/proptype/src/App.js"],"sourcesContent":["import {\n  Box,\n  CloseButton,\n  Container,\n  FormControl,\n  FormErrorMessage,\n  FormHelperText,\n  FormLabel,\n  Heading,\n  Input,\n  useDisclosure,\n  useToast,\n} from \"@chakra-ui/react\";\n\nimport { useState } from \"react\";\nimport { SlideFade } from \"@chakra-ui/react\";\nimport \"./App.css\";\nimport Evenodd from \"./components/evenodd\";\nimport Palindrome from \"./components/palindrome\";\nimport Prime from \"./components/prime\";\n\nfunction App() {\n  const toast = useToast();\n  const { isOpen, onToggle } = useDisclosure();\n  const [error, seterror] = useState(false);\n  const [errormessage, seterrormessage] = useState(\"\");\n  const [output, setoutput] = useState(\"\");\n  function handlepalindrome(p) {\n    if (p === \"error\") {\n      seterrormessage(\n        \"Please enter a string to check if it is a palindrome string or not.\"\n      );\n      seterror(true);\n    } else {\n      if (p) {\n        setoutput(`${input} is a Palindrome String.`);\n        if (isOpen) {\n        } else {\n          onToggle();\n        }\n        seterror(false);\n      } else {\n        setoutput(`${input} is not a Palindrome String.`);\n        if (isOpen) {\n        } else {\n          onToggle();\n        }\n        seterror(false);\n      }\n    }\n  }\n\n  function handleeven(even) {\n    if (even === \"error\") {\n      if (input === \"\") {\n        seterrormessage(\n          \"Please enter a number to check if it is a Even or Odd number!\"\n        );\n        seterror(true);\n      } else {\n        seterrormessage(`Whoops! ${input} is not a number!`);\n        seterror(true);\n      }\n    } else {\n      if (even) {\n        setoutput(`${input} is a Even Number.`);\n        if (isOpen) {\n        } else {\n          onToggle();\n        }\n        seterror(false);\n      } else {\n        setoutput(`${input} is a Odd Number.`);\n        if (isOpen) {\n        } else {\n          onToggle();\n        }\n        seterror(false);\n      }\n    }\n  }\n\n  function handleprime(prime) {\n    if (prime === \"error\") {\n      if (input === \"\") {\n        seterrormessage(\n          \"Please enter a number to check if it is a prime number or not!\"\n        );\n        seterror(true);\n      } else {\n        seterrormessage(`Whoops! ${input} is not a number!`);\n        seterror(true);\n      }\n    } else {\n      if (parseInt(input) === 1) {\n        setoutput(`1 is neither prime nor a composite number`);\n        if (isOpen) {\n        } else {\n          onToggle();\n        }\n        seterror(false);\n      } else if (parseInt(input) < 1) {\n        toast({\n          title: `Please enter a positive number.`,\n          status: \"error\",\n          isClosable: true,\n          position: \"top\",\n        });\n        seterror(false);\n      } else if (prime) {\n        setoutput(`${input} is a Prime Number.`);\n        if (isOpen) {\n        } else {\n          onToggle();\n        }\n        seterror(false);\n      } else {\n        setoutput(`${input} is not a Prime Number.`);\n        if (isOpen) {\n        } else {\n          onToggle();\n        }\n        seterror(false);\n      }\n    }\n  }\n  const [input, setInput] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n\n    seterror(false);\n  };\n\n  return (\n    <>\n      <Box id=\"img\" h=\"100vh\" w=\"100vw\">\n        <Container pt=\"120px\">\n          <Heading color=\"teal.500\" mb={10}>\n            Even/Odd, Prime Number, Palindrome String Checker\n          </Heading>\n          <FormControl isInvalid={error}>\n            <FormLabel color=\"teal.800\">\n              Enter a number/string to check whether it is Even/Odd or Prime\n              number or Palindrome string.\n            </FormLabel>\n            <Input\n              placeholder=\"Input\"\n              type=\"text\"\n              value={input}\n              onChange={handleInputChange}\n            />\n            {!error ? (\n              <FormHelperText>\n                Note: String can contain alphabets, numbers and special\n                characters. <br /> Example: \"#@1wow1@#\" is valid string.\n              </FormHelperText>\n            ) : (\n              <FormErrorMessage>{errormessage}</FormErrorMessage>\n            )}\n            <Box mt=\"30px\">\n              <Evenodd\n                iseven={handleeven}\n                number={\n                  /[a-zA-Z]/.test(input) ? parseInt(\"lol\") : parseInt(input)\n                }\n              />{\" \"}\n              <Prime\n                isprime={handleprime}\n                number={\n                  /[a-zA-Z]/.test(input) ? parseInt(\"lol\") : parseInt(input)\n                }\n              />{\" \"}\n              <Palindrome ispalindrome={handlepalindrome} input={input} />\n            </Box>\n            <SlideFade in={isOpen} offsetY=\"20px\">\n              <Box\n                p=\"40px\"\n                color=\"white\"\n                mt=\"4\"\n                bg=\"teal.500\"\n                rounded=\"md\"\n                shadow=\"md\"\n                id=\"output\"\n              >\n                <CloseButton id=\"close\" onClick={onToggle} />\n                <strong>Output:</strong> <br />\n                {output}\n              </Box>\n            </SlideFade>\n          </FormControl>\n        </Container>\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}