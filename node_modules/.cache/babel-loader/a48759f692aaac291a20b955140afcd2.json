{"ast":null,"code":"var _jsxFileName = \"/home/kali/Desktop/Git/Project Documents/React-Task-5.2/src/components/palindrome.js\";\nimport { Button } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Palindrome(props) {\n  function handleclick() {\n    if (props.input === \"\") {\n      props.ispalindrome(\"error\");\n    } else {\n      const len = props.input.length;\n\n      for (let i = 0; i < len / 2; i++) {\n        if (props.input[i] !== props.input[len - 1 - i]) {\n          return props.ispalindrome(false);\n        }\n      }\n\n      return props.ispalindrome(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleclick,\n    mb: \"5px\",\n    colorScheme: \"teal\",\n    variant: \"outline\",\n    children: \"Palindrome String\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Palindrome;\nPalindrome.propTypes = {\n  string: PropTypes.string\n};\nexport default Palindrome;\n\nvar _c;\n\n$RefreshReg$(_c, \"Palindrome\");","map":{"version":3,"names":["Button","React","PropTypes","Palindrome","props","handleclick","input","ispalindrome","len","length","i","propTypes","string"],"sources":["/home/kali/Desktop/Git/Project Documents/React-Task-5.2/src/components/palindrome.js"],"sourcesContent":["import { Button } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Palindrome(props) {\r\n  function handleclick() {\r\n    if (props.input === \"\") {\r\n      props.ispalindrome(\"error\");\r\n    } else {\r\n      const len = props.input.length;\r\n\r\n      for (let i = 0; i < len / 2; i++) {\r\n        if (props.input[i] !== props.input[len - 1 - i]) {\r\n          return props.ispalindrome(false);\r\n        }\r\n      }\r\n      return props.ispalindrome(true);\r\n    }\r\n  }\r\n  return (\r\n    <Button onClick={handleclick} mb=\"5px\" colorScheme=\"teal\" variant=\"outline\">\r\n      Palindrome String\r\n    </Button>\r\n  );\r\n}\r\nPalindrome.propTypes = {\r\n  string: PropTypes.string,\r\n};\r\n\r\nexport default Palindrome;\r\n"],"mappings":";AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EACzB,SAASC,WAAT,GAAuB;IACrB,IAAID,KAAK,CAACE,KAAN,KAAgB,EAApB,EAAwB;MACtBF,KAAK,CAACG,YAAN,CAAmB,OAAnB;IACD,CAFD,MAEO;MACL,MAAMC,GAAG,GAAGJ,KAAK,CAACE,KAAN,CAAYG,MAAxB;;MAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,GAAG,CAA1B,EAA6BE,CAAC,EAA9B,EAAkC;QAChC,IAAIN,KAAK,CAACE,KAAN,CAAYI,CAAZ,MAAmBN,KAAK,CAACE,KAAN,CAAYE,GAAG,GAAG,CAAN,GAAUE,CAAtB,CAAvB,EAAiD;UAC/C,OAAON,KAAK,CAACG,YAAN,CAAmB,KAAnB,CAAP;QACD;MACF;;MACD,OAAOH,KAAK,CAACG,YAAN,CAAmB,IAAnB,CAAP;IACD;EACF;;EACD,oBACE,QAAC,MAAD;IAAQ,OAAO,EAAEF,WAAjB;IAA8B,EAAE,EAAC,KAAjC;IAAuC,WAAW,EAAC,MAAnD;IAA0D,OAAO,EAAC,SAAlE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;KApBQF,U;AAqBTA,UAAU,CAACQ,SAAX,GAAuB;EACrBC,MAAM,EAAEV,SAAS,CAACU;AADG,CAAvB;AAIA,eAAeT,UAAf"},"metadata":{},"sourceType":"module"}